# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества. 
# Затем пользователь вводит сами элементы множеств.

n = int(input("Введите количество элементов первого множества: "))
set1 = set(map(int, input("Введите элементы первого множества: ").split()))

m = int(input("Введите количество элементов второго множества: "))
set2 = set(map(int, input("Введите элементы второго множества: ").split()))

common_elements = sorted(set1 & set2)
print("Общие элементы, встречающиеся в обоих множествах:", common_elements)

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, 
# причём кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних. 
# Всего на грядке растёт N кустов. Эти кусты обладают разной урожайностью, 
# поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. 
# Эта система состоит из управляющего модуля и нескольких собирающих модулей. 
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, 
# собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, 
# которое может собрать за один заход собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.

# 3 1 2 4

n = int(input("Введите количество кустов: "))
berries = list(map(int, input("Введите количество ягод на каждом кусте: ").split()))

max_collected = 0
for i in range(n):
    collected = berries[i] + berries[(i + 1) % n] + berries[(i + 2) % n]
    max_collected = max(max_collected, collected)

print("Максимальное количество ягод, которое может собрать модуль:", max_collected)
